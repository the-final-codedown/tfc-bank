version: "3"
services:
  mongodb:
    image: mongo:3.2.4
    container_name: "mongodb"
    ports:
    - 27017:27017
    command: --smallfiles
    networks:
    - backend
  app:
    build: .
    ports:
    - 8080:8080
    links:
    - mongodb
    depends_on:
    - zookeeper
    - broker
    environment:
      spring.data.mongodb.uri: mongodb://mongodb:27017/account
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    ports:
    - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
    - backend
  broker:
    image: confluentinc/cp-enterprise-kafka:5.3.1
    ports:
    - 29092:29092
    - 9092:9092
    depends_on:
    - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://127.0.0.1:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    networks:
    - backend
networks:
  backend: